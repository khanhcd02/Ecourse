<!-- Tab links -->
<div class="tabs">
  <div class="tab">
	<button class="tablinks" id="defaultOpen" onclick="openTab(event, 'personal')">personal</button>
	<button class="tablinks" onclick="openTab(event, 'learning')">learning</button>
	<button class="tablinks" onclick="openTab(event, 'edit')">...</button>
  </div>
  
  <!-- Tab content -->
  <div id="personal" class="tabcontent">
	<h3><%= user.Fullname %></h3>
	<img style="max-width: 200px;max-height: 200px;width: 40%;border-radius: 50%;" src="<%= user.Avatar ? user.Avatar : '/users/h1.jpg' %>" alt="">
	<h4>Email:</h4><p><%= user.Email %></p>
	<h4>SDT:</h4><p><%= user.Phone_number %></p>
	<h4>Vai trò:</h4><p><%= user.Role %></p>
	<h4>Số dư:</h4><p><%= user.Balance %></p>
  </div>
  
  <div id="learning" class="tabcontent">
	<h3>My courses</h3>
	<table>
    <thead>
      <tr>
        <th>Course Name</th>
        <th>Track Lessons</th>
        <th>Track Exams</th>
        <th>Enrollment Date</th>
        <th>Status</th>
      </tr>
    </thead>
    <tbody>
      <% progress.forEach(i => { %>
        <tr>
          <td><a href="/home/courses/<%= i.Course_id %>"><%= i.Name_course %></a></td>
          <td><%= i.Track_lessons %></td>
          <td><%= i.Track_exams %></td>
          <td><%= new Date(i.Enrollment_date).toLocaleString('vi-VN') %></td>
          <td><%= i.Status %></td>
        </tr>
      <% }) %>
    </tbody>
  </table>
  </div>
  
  <div id="edit" class="tabcontent">
    <ul class="shadow-button-set">
      <li><button><a style="text-decoration: none;color: #000;" href="/user/qrcode">Nạp tiền</a></button></li>
      <% if(user.Role === 'teacher') { %>
        <li><button><a style="text-decoration: none;color: #000;" href="/courses">Quản lý khóa học</a></button></li>
      <% } %>
      <% if(user.Role === 'admin') { %>
        <li><button><a style="text-decoration: none;color: #000;" href="/admin/dashboard">Đến trang admin</a></button></li>
      <% } %>
      <li><button>Lịch sử giao dịch</button></li>
      <% if(user.Role === 'student') { %>
        <li><button><a style="text-decoration: none;color: #000;" href="/user/reqTeacher">Nâng cấp thành viên</a></button></li>
      <% } %>
      <li><button><a style="text-decoration: none;color: #000;" href="/auth/logout">Đăng xuất</a></button></li>
    </ul>
</div>
<style>
	/* Style the tab */
.tabs {
  max-width: 50%;
  height: 500px;
  margin: auto;
  margin-top: 50px;
}

.tabcontent img {
    float: right;
    max-width: 100%; /* Giới hạn tối đa chiều rộng là 100% của container cha */
    height: auto; /* Chiều cao tự động điều chỉnh theo tỷ lệ */
}

.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  opacity: 0.7;
}

/* Style the buttons that are used to open the tab content */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
  background-color: rgba(255, 255, 255, 0.5);
}
.tabcontent {
  animation: fadeEffect 1s; /* Fading effect takes 1 second */
}

/* Go from zero to full opacity */
@keyframes fadeEffect {
  from {opacity: 0;}
  to {opacity: 1;}
}

@use postcss-nested;

.shadow-button-set {
  margin: 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 2.5vmin;
  
  & > li {
    display: inline-flex;
    background: black;
    
    &:is(:hover, :focus-within) > button:not(:active) {
      --distance: -10px;
    }
  }
  
  & button {
    appearance: none;
    outline: none;
    font-size: 5vmin;
    border: 3px solid black;
    background: white;
    
    --distance: 0;
    transform: translateX(var(--distance)) translateY(var(--distance));
    
    @media (prefers-reduced-motion: no-preference) {
      will-change: transform;
      transition: transform .2s ease ;
    }
  }
}

* {
  box-sizing: border-box;
  margin: 0;
}

html {
  block-size: 100%;
}

body {
  min-block-size: 100%;
  font-family: system-ui, sans-serif;
  
  display: grid;
  place-content: center;
}
table {
  width: 100%; /* Chiều rộng bảng bằng 100% */
}

th, td {
  padding: 10px; /* Khoảng cách bên trong ô */
}

/* Điều chỉnh kích thước cột */
th:nth-child(1), td:nth-child(1) {
  width: 40%;
}



/* ... các cột còn lại */
</style>
<script>
	function openTab(evt, tabName) {
  // Declare all variables
  var i, tabcontent, tablinks;

  // Get all elements with class="tabcontent" and hide them
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }

  // Get all elements with class="tablinks" and remove the class "active"
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }

  // Show the current tab, and add an "active" class to the button that opened the tab
  document.getElementById(tabName).style.display = "block";
  evt.currentTarget.className += " active";
}
document.getElementById("defaultOpen").click();
</script>